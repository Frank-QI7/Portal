{"ast":null,"code":"var _jsxFileName = \"/Users/yunqingqi/go/src/Leapsheep_Protal/leapsheep_nextjs/pages/windowsize.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction getWindowDimensions() {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const {\n    0: windowDimensions,\n    1: setWindowDimensions\n  } = useState(getWindowDimensions());\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowDimensions;\n}\n\nconst Windowsize = () => {\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"width: \", width, \" ~ height: \", height);\n}; // import React, { useEffect,useLayoutEffect, useState } from 'react';\n//\n// function debounce(fn, ms) {\n//     let timer\n//     return _ => {\n//         clearTimeout(timer)\n//         timer = setTimeout(_ => {\n//             timer = null\n//             fn.apply(this, arguments)\n//         }, ms)\n//     };\n// }\n//\n// function ShowWindowDimensions(props) {\n//     const [size, setSize] = useState({\n//         height: 0,\n//         width: 0\n//     });\n//     useEffect(() => {\n//         const debouncedHandleResize = debounce(function handleResize() {\n//             setSize({\n//                 height: window.innerHeight,\n//                 width: window.innerWidth\n//             })\n//         }, 500)\n//\n//         window.addEventListener('resize', debouncedHandleResize);\n//         return () => window.removeEventListener('resize', debouncedHandleResize);\n//     }, []);\n//\n//     return <span>Window size: {size.height} x {size.width}</span>;\n// }\n//\n// export default ShowWindowDimensions","map":{"version":3,"sources":["/Users/yunqingqi/go/src/Leapsheep_Protal/leapsheep_nextjs/pages/windowsize.js"],"names":["React","useEffect","useState","ReactDOM","getWindowDimensions","innerWidth","width","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","Windowsize"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,SAASC,mBAAT,GAA+B;AAC3B,QAAM;AAAEC,IAAAA,UAAU,EAAEC,KAAd;AAAqBC,IAAAA,WAAW,EAAEC;AAAlC,MAA6CC,MAAnD;AACA,SAAO;AACHH,IAAAA,KADG;AAEHE,IAAAA;AAFG,GAAP;AAIH;;AAED,eAAe,SAASE,mBAAT,GAA+B;AAC1C,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CV,QAAQ,CACpDE,mBAAmB,EADiC,CAAxD;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASY,YAAT,GAAwB;AACpBD,MAAAA,mBAAmB,CAACR,mBAAmB,EAApB,CAAnB;AACH;;AAEDK,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMJ,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACH,GAPQ,EAON,EAPM,CAAT;AASA,SAAOF,gBAAP;AACH;;AAED,MAAMK,UAAU,GAAG,MAAM;AACrB,QAAM;AAAER,IAAAA,MAAF;AAAUF,IAAAA;AAAV,MAAoBI,mBAAmB,EAA7C;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACYJ,KADZ,iBAC8BE,MAD9B,CADJ;AAKH,CARD,C,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nexport default function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(\n        getWindowDimensions()\n    );\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n\nconst Windowsize = () => {\n    const { height, width } = useWindowDimensions();\n\n    return (\n        <div>\n            width: {width} ~ height: {height}\n        </div>\n    );\n};\n\n\n\n\n\n\n\n// import React, { useEffect,useLayoutEffect, useState } from 'react';\n//\n// function debounce(fn, ms) {\n//     let timer\n//     return _ => {\n//         clearTimeout(timer)\n//         timer = setTimeout(_ => {\n//             timer = null\n//             fn.apply(this, arguments)\n//         }, ms)\n//     };\n// }\n//\n// function ShowWindowDimensions(props) {\n//     const [size, setSize] = useState({\n//         height: 0,\n//         width: 0\n//     });\n//     useEffect(() => {\n//         const debouncedHandleResize = debounce(function handleResize() {\n//             setSize({\n//                 height: window.innerHeight,\n//                 width: window.innerWidth\n//             })\n//         }, 500)\n//\n//         window.addEventListener('resize', debouncedHandleResize);\n//         return () => window.removeEventListener('resize', debouncedHandleResize);\n//     }, []);\n//\n//     return <span>Window size: {size.height} x {size.width}</span>;\n// }\n//\n// export default ShowWindowDimensions"]},"metadata":{},"sourceType":"module"}
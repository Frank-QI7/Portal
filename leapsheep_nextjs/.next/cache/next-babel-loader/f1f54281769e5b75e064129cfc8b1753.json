{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yunqingqi/Documents/GitHub/Portal/leapsheep_nextjs/components/carousel_card/Carousel.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Fade, Slide, IconButton } from '@material-ui/core';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nvar Carousel = /*#__PURE__*/function (_Component) {\n  _inherits(Carousel, _Component);\n\n  function Carousel(props) {\n    var _this;\n\n    _classCallCheck(this, Carousel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Carousel).call(this, props));\n    _this.state = {\n      active: 0,\n      autoPlay: _this.props.autoPlay !== undefined ? _this.props.autoPlay : true,\n      interval: _this.props.interval !== undefined ? _this.props.interval : 4000\n    };\n    _this.timer = null;\n    return _this;\n  }\n\n  _createClass(Carousel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.start();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stop();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.autoPlay !== prevState.autoPlay || prevProps.interval !== prevState.interval) {\n        this.reset();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (this.state.autoPlay) {\n        this.timer = setInterval(this.next, this.state.interval);\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.stop();\n\n      if (this.state.autoPlay) {\n        this.start();\n      }\n    }\n  }, {\n    key: \"pressIndicator\",\n    value: function pressIndicator(index) {\n      this.setState({\n        active: index\n      }, this.reset);\n    }\n  }, {\n    key: \"next\",\n    value: function next(event) {\n      var next = this.state.active + 1 > this.props.children.length - 1 ? 0 : this.state.active + 1;\n      this.setState({\n        active: next\n      }, this.reset);\n      if (event) event.stopPropagation();\n    }\n  }, {\n    key: \"prev\",\n    value: function prev(event) {\n      var prev = this.state.active - 1 < 0 ? this.props.children.length - 1 : this.state.active - 1;\n      this.setState({\n        active: prev\n      }, this.reset);\n      if (event) event.stopPropagation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var indicators = this.props.indicators !== undefined ? this.props.indicators : true;\n      var animation = this.props.animation !== undefined ? this.props.animation : \"fade\";\n      return __jsx(\"div\", {\n        className: \"Carousel \".concat(this.props.className ? this.props.className : \"\"),\n        onMouseEnter: this.stop,\n        onMouseOut: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, _Array$isArray(this.props.children) ? this.props.children.map(function (child, index) {\n        return __jsx(CarouselItem, {\n          key: index,\n          active: index === _this2.state.active ? true : false,\n          child: child,\n          animation: animation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n      }) : __jsx(CarouselItem, {\n        key: 0,\n        active: true,\n        child: this.props.children,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"Next ButtonWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, __jsx(IconButton, {\n        className: \"Next Button mui--align-middle\",\n        onClick: this.next,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, __jsx(NavigateNextIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"Prev ButtonWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, __jsx(IconButton, {\n        className: \"Prev Button mui--align-middle\",\n        onClick: this.prev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, __jsx(NavigateBeforeIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }))), indicators ? __jsx(Indicators, {\n        length: this.props.children.length,\n        active: this.state.active,\n        press: this.pressIndicator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }) : null);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.autoPlay !== prevState.autoPlay || nextProps.interval !== prevState.interval) {\n        return {\n          autoPlay: nextProps.autoPlay !== undefined ? nextProps.autoPlay : true,\n          interval: nextProps.interval !== undefined ? nextProps.interval : 4000\n        };\n      } else return null;\n    }\n  }]);\n\n  return Carousel;\n}(Component);\n\nexport { Carousel as default };\n\nfunction CarouselItem(props) {\n  return (// props.active ? \n    // (\n    __jsx(\"div\", {\n      className: \"CarouselItem\",\n      hidden: !props.active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, props.animation === \"slide\" ? __jsx(Slide, {\n      direction: \"left\",\n      \"in\": props.active,\n      timeout: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, props.child)) : __jsx(Fade, {\n      \"in\": props.active,\n      timeout: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, props.child))) // ) : null\n\n  );\n}\n\nfunction Indicators(props) {\n  var indicators = [];\n\n  var _loop = function _loop(i) {\n    var className = i === props.active ? \"Active Indicator\" : \"Indicator\";\n\n    var item = __jsx(FiberManualRecordIcon, {\n      key: i,\n      size: \"small\",\n      className: className,\n      onClick: function onClick() {\n        props.press(i);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    });\n\n    indicators.push(item);\n  };\n\n  for (var i = 0; i < props.length; i++) {\n    _loop(i);\n  }\n\n  return __jsx(\"div\", {\n    className: \"Indicators\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, indicators);\n}","map":{"version":3,"sources":["/Users/yunqingqi/Documents/GitHub/Portal/leapsheep_nextjs/components/carousel_card/Carousel.js"],"names":["React","Component","Fade","Slide","IconButton","FiberManualRecordIcon","NavigateBeforeIcon","NavigateNextIcon","Carousel","props","state","active","autoPlay","undefined","interval","timer","start","stop","prevProps","prevState","reset","clearInterval","setInterval","next","index","setState","event","children","length","stopPropagation","prev","indicators","animation","className","map","child","pressIndicator","nextProps","CarouselItem","Indicators","i","item","press","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Fade, Slide, IconButton} from '@material-ui/core';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default class Carousel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            active: 0,\r\n            autoPlay: this.props.autoPlay !== undefined ? this.props.autoPlay : true,\r\n            interval: this.props.interval !== undefined ? this.props.interval : 4000\r\n        }\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.start();\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        this.stop();\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState)\r\n    {\r\n        if (nextProps.autoPlay !== prevState.autoPlay || nextProps.interval !== prevState.interval)\r\n        {\r\n            return {\r\n                autoPlay: nextProps.autoPlay !== undefined ? nextProps.autoPlay : true,\r\n                interval: nextProps.interval !== undefined ? nextProps.interval : 4000\r\n            }\r\n        }\r\n\r\n        else return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState)\r\n    {\r\n        if (prevProps.autoPlay !== prevState.autoPlay || prevProps.interval !== prevState.interval)\r\n        {\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    stop()\r\n    {\r\n        if (this.timer)\r\n        {\r\n            clearInterval(this.timer)\r\n            this.timer = null;\r\n        }\r\n    }\r\n\r\n    start()\r\n    {\r\n        if (this.state.autoPlay)\r\n        {\r\n            this.timer = setInterval(this.next, this.state.interval);\r\n        }\r\n    }\r\n\r\n    reset()\r\n    {\r\n        this.stop();\r\n\r\n        if (this.state.autoPlay)\r\n        {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    pressIndicator(index)\r\n    {\r\n        this.setState({\r\n            active: index\r\n        }, this.reset)\r\n    }\r\n\r\n    next(event)\r\n    {\r\n        const next = this.state.active + 1 > this.props.children.length - 1 ? 0 : this.state.active + 1;\r\n\r\n        this.setState({\r\n            active: next\r\n        }, this.reset)\r\n\r\n        if (event)\r\n            event.stopPropagation();\r\n    }\r\n\r\n    prev(event)\r\n    {\r\n        const prev = this.state.active - 1 < 0 ? this.props.children.length - 1 : this.state.active - 1;\r\n\r\n        this.setState({\r\n            active: prev\r\n        }, this.reset)\r\n\r\n        if (event)\r\n            event.stopPropagation();\r\n    }\r\n\r\n    render()\r\n    {\r\n        const indicators = this.props.indicators !== undefined ? this.props.indicators: true;\r\n        const animation = this.props.animation !== undefined ? this.props.animation: \"fade\"\r\n\r\n        return (\r\n            <div className={`Carousel ${this.props.className ? this.props.className : \"\"}`} onMouseEnter={this.stop} onMouseOut={this.reset}>\r\n                {   \r\n                    Array.isArray(this.props.children) ? \r\n                        this.props.children.map( (child, index) => {\r\n                            return (\r\n                                <CarouselItem key={index} active={index === this.state.active ? true : false} child={child} animation={animation}/>\r\n                            )\r\n                        })\r\n                        :\r\n                        <CarouselItem key={0} active={true} child={this.props.children}/>\r\n                }\r\n                \r\n                <div className=\"Next ButtonWrapper\">\r\n                    <IconButton className=\"Next Button mui--align-middle\" onClick={this.next}>\r\n                        <NavigateNextIcon/>\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <div className=\"Prev ButtonWrapper\">\r\n                    <IconButton className=\"Prev Button mui--align-middle\" onClick={this.prev}>\r\n                        <NavigateBeforeIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                \r\n                {indicators ? <Indicators length={this.props.children.length} active={this.state.active} press={this.pressIndicator}/> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction CarouselItem(props)\r\n{\r\n    return (\r\n        // props.active ? \r\n        // (\r\n            <div className=\"CarouselItem\" hidden={!props.active}>\r\n                {props.animation === \"slide\" ?\r\n                    <Slide direction=\"left\" in={props.active} timeout={200}>\r\n                        <div>\r\n                            {props.child}\r\n                        </div>\r\n                    </Slide>\r\n                    :\r\n                    <Fade in={props.active} timeout={500}>\r\n                        <div>\r\n                            {props.child}\r\n                        </div>\r\n                    </Fade>\r\n                }\r\n            </div>\r\n        // ) : null\r\n    )\r\n}\r\n\r\nfunction Indicators(props)\r\n{\r\n    let indicators = [];\r\n    for (let i = 0; i < props.length; i++)\r\n    {\r\n        const className = i === props.active ? \"Active Indicator\" : \"Indicator\";\r\n        const item = <FiberManualRecordIcon key={i} size='small' className={className} onClick={() => {props.press(i)}}/>;\r\n\r\n        indicators.push(item);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Indicators\">\r\n            {indicators}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
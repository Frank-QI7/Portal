{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yunqingqi/go/src/Leapsheep_Protal/leapsheep_nextjs/pages/windowsize.js\";\nvar __jsx = React.createElement;\nimport React, { useLayoutEffect, useState } from 'react';\n\nfunction debounce(fn, ms) {\n  var _arguments = arguments,\n      _this = this;\n\n  var timer;\n  return function (_) {\n    clearTimeout(timer);\n    timer = setTimeout(function (_) {\n      timer = null;\n      fn.apply(_this, _arguments);\n    }, ms);\n  };\n}\n\nfunction useWindowSize() {\n  var _useState = useState({\n    height: window.innerHeight,\n    width: window.innerWidth\n  }),\n      size = _useState[0],\n      setSize = _useState[1];\n\n  useLayoutEffect(function () {\n    var debouncedHandleResize = debounce(function handleResize() {\n      setSize({\n        height: window.innerHeight,\n        width: window.innerWidth\n      });\n    }, 1000);\n    window.addEventListener('resize', debouncedHandleResize);\n    return function () {\n      return window.removeEventListener('resize', debouncedHandleResize);\n    };\n  }, []);\n  return size;\n}\n\nfunction ShowWindowDimensions(props) {\n  var _useWindowSize = useWindowSize(),\n      _useWindowSize2 = _slicedToArray(_useWindowSize, 2),\n      width = _useWindowSize2[0],\n      height = _useWindowSize2[1];\n\n  return __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Window size: \", width, \" x \", height);\n}\n\nexport default ShowWindowDimensions;","map":{"version":3,"sources":["/Users/yunqingqi/go/src/Leapsheep_Protal/leapsheep_nextjs/pages/windowsize.js"],"names":["React","useLayoutEffect","useState","debounce","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","useWindowSize","height","window","innerHeight","width","innerWidth","size","setSize","debouncedHandleResize","handleResize","addEventListener","removeEventListener","ShowWindowDimensions","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;;AAEA,SAASC,QAAT,CAAkBC,EAAlB,EAAsBC,EAAtB,EAA0B;AAAA;AAAA;;AACtB,MAAIC,KAAJ;AACA,SAAO,UAAAC,CAAC,EAAI;AACRC,IAAAA,YAAY,CAACF,KAAD,CAAZ;AACAA,IAAAA,KAAK,GAAGG,UAAU,CAAC,UAAAF,CAAC,EAAI;AACpBD,MAAAA,KAAK,GAAG,IAAR;AACAF,MAAAA,EAAE,CAACM,KAAH,CAAS,KAAT,EAAeC,UAAf;AACH,KAHiB,EAGfN,EAHe,CAAlB;AAIH,GAND;AAOH;;AAED,SAASO,aAAT,GAAyB;AAAA,kBACGV,QAAQ,CAAC;AAC7BW,IAAAA,MAAM,EAAEC,MAAM,CAACC,WADc;AAE7BC,IAAAA,KAAK,EAAEF,MAAM,CAACG;AAFe,GAAD,CADX;AAAA,MACdC,IADc;AAAA,MACRC,OADQ;;AAKrBlB,EAAAA,eAAe,CAAC,YAAM;AAClB,QAAMmB,qBAAqB,GAAGjB,QAAQ,CAAC,SAASkB,YAAT,GAAwB;AAC3DF,MAAAA,OAAO,CAAC;AACJN,QAAAA,MAAM,EAAEC,MAAM,CAACC,WADX;AAEJC,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAFV,OAAD,CAAP;AAIH,KALqC,EAKnC,IALmC,CAAtC;AAMAH,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCF,qBAAlC;AACA,WAAO;AAAA,aAAMN,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCH,qBAArC,CAAN;AAAA,KAAP;AACH,GATc,EASZ,EATY,CAAf;AAUA,SAAOF,IAAP;AACH;;AAED,SAASM,oBAAT,CAA8BC,KAA9B,EAAqC;AAAA,uBACTb,aAAa,EADJ;AAAA;AAAA,MAC1BI,KAD0B;AAAA,MACnBH,MADmB;;AAEjC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoBG,KAApB,SAA8BH,MAA9B,CAAP;AACH;;AAED,eAAeW,oBAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react';\n\nfunction debounce(fn, ms) {\n    let timer\n    return _ => {\n        clearTimeout(timer)\n        timer = setTimeout(_ => {\n            timer = null\n            fn.apply(this, arguments)\n        }, ms)\n    };\n}\n\nfunction useWindowSize() {\n    const [size, setSize] = useState({\n        height: window.innerHeight,\n        width: window.innerWidth\n    });\n    useLayoutEffect(() => {\n        const debouncedHandleResize = debounce(function handleResize() {\n            setSize({\n                height: window.innerHeight,\n                width: window.innerWidth\n            })\n        }, 1000)\n        window.addEventListener('resize', debouncedHandleResize);\n        return () => window.removeEventListener('resize', debouncedHandleResize);\n    }, []);\n    return size;\n}\n\nfunction ShowWindowDimensions(props) {\n    const [width, height] = useWindowSize();\n    return <span>Window size: {width} x {height}</span>;\n}\n\nexport default ShowWindowDimensions"]},"metadata":{},"sourceType":"module"}